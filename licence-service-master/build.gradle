buildscript {
	ext {
		springBootVersion = '1.5.18.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
	baseName = 'licence-service'
	version = '1.0.0-RELEASE'
}

group = 'com.sycomafrica.syhos'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Edgware.SR5'
}

dependencies {
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.cloud:spring-cloud-starter-eureka')
	implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
	implementation('org.springframework.cloud:spring-cloud-starter-security')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
	implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
	implementation('org.springframework.cloud:spring-cloud-stream')
//	implementation('org.springframework.cloud:spring-cloud-stream-binder-kafka')
//	implementation('org.springframework.kafka:spring-kafka')
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-mail')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	runtime('org.postgresql:postgresql')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	implementation('io.springfox:springfox-swagger-ui:2.7.0')
	implementation('io.springfox:springfox-swagger2:2.7.0')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.springframework.kafka:spring-kafka-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task docker(type: Docker, dependsOn: assemble){
	push = false
	applicationName = jar.baseName
	tagVersion = jar.version
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst{
		copy {
			from jar
			into stageDir
		}
	}
}
